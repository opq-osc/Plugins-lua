package.path = package.path .. ";./Plugins/lib/?.lua;"
local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")
local mysql = require("mysql")
local Go = require("Fans")

function ReceiveFriendMsg(CurrentQQ, data)
	return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
	if data.MsgHead.MsgType == 82 then
		local sentenceses = {
			"Erdos 相信上帝有一本记录所有数学中绝妙证明的书，上帝相信这本书在nb_user手里。",
			"有一次费马惹怒了nb_user，于是就有了费马最后定理。",
			"nb_user从不会用光页边的空白。",
			"nb_user的 Erdos 数是 -1。",
			"如果nb_user告诉你他在说谎，他就正在说真话。",
			"nb_user从大到小列举了所有素数，就知道了素数有无穷多。",
			"nb_user可以不重复地走遍柯尼斯堡的七座桥。",
			"nb_user可以倒着写完圆周率的每一位。",
			"当数学家们使用通用语句——设 n 是一个正整数时，这是在请求nb_user允许他们这样做。",
			"nb_user小时候有一次要把正整数从 1 加到 100，于是他用心算把所有正整数的和减去大于 100 的正整数的和。",
			"不是nb_user发现了正态分布，而是自然规律在遵从$nb_user的意愿。",
			"一个数学家，一个物理学家，一个工程师走进一家酒吧，侍者说：“你好，nb_user教授”。",
			"nb_user可以走到莫比乌斯带的另一面。",
			"当nb_user令一个正整数增加 1 时，那个正整数并没有增加，而是其他正整数减少了 1。",
			"nb_user同时给他自己和罗素剪头发。",
			"nb_user不能理解什么是随机过程，因为他能预言随机数。",
			"有一次nb_user证明了一个结论，但他不喜欢这个结论，于是$nb_user把它证伪了。",
			"有些级数是发散的，因为nb_user觉得它们不值得加起来。",
			"问nb_user一个定理是否正确可以作为一个定理的严谨证明。",
			"如果没有船，nb_user可以把狼，羊，菜传送到河对岸。",
			"有一次nb_user在森林里迷路了，于是他给这个森林添加了一些边把它变成了一棵树。",
			"只有nb_user知道薛定谔的猫是死是活。",
			'通过故意遗漏证明最后的"证毕",nb_user拯救了热带雨林。',
			"nb_user可以剔掉奥卡姆剃刀。",
			"你刚证明了一个定理？nb_user200 年前就证明它了。",
			"空集的定义是nb_user不会证明的定理构成的集合。",
			"“我找不到反例”可以被视为一个定理的证明，如果它是nb_user写下的。",
			"nb_user把磁铁断为两块时，他得到两个单极磁铁。",
			"费马认为书页边缘写不下自己对费马大定理的证明，nb_user能证明为什么这个证明这么长。",
			"上帝从不掷色子，除非nb_user允许他赢一小会。",
			"平行线在nb_user让它们相交的地方相交。",
			"当哥德尔听说nb_user能证明一切命题时，他让$nb_user证明“存在一个命题$nb_user不能证明”——这就是量子态的来历。",
			"nb_user可以看到自己头上帽子的颜色。",
			"nb_user把无穷视为归纳证明的第一个非平凡情况。",
			"nb_user可以用 1 种颜色染任何地图。",
			"nb_user在求不定积分时不需要在最后加上一个常数。",
			"nb_user无需站在任何人肩膀上就能比别人看的更远。",
			"nb_user用克莱因瓶喝酒。",
			"nb_user通过枚举法证伪了哥德尔不完备性定理/有一次$nb_user发现有一个定理自己不会证——这直接证明了哥德尔不完备定理。",
			"nb_user有 log(n) 速度的排序算法。",
			"上帝创造了正整数，剩下的就是nb_user的工作了。",
			"黎曼是nb_user发表未公开成果时使用的名字。",
			"nb_user不用任何公理就能证明一个定理。",
			"一个发现就是一个nb_user的未公开结果。",
			"nb_user使用无穷进制写数。", "nb_user可以除以 0。",
			"存在一个实数到被nb_user证明了的定理的双射。",
			"nb_user从不需要选择公理。",
			"nb_user在 200 年前发明了 64 量子位计算机，但这让他的工作减速了。",
			"难题不会为nb_user带来麻烦，$nb_user会为难题带来麻烦。",
			"nb_user说过“数学是科学的皇后”，你猜谁是国王？",
			"没有比 65537 大的费马素数，因为nb_user发现费马将要发现什么了不起的事情，于是把它终结掉了。",
			"发散序列当看到nb_user在旁边时会收敛。",
			"宇宙通过膨胀让自己的熵增加速度不超过nb_user证明定理的速度。",
			"Erdos说他知道 37 个勾股定理的证明，nb_user说他知道 37 个黎曼定理的证明，并留给黎曼做练习。",
			"希尔伯特 23 问题是他收集的nb_user的手稿中留给读者做练习的那些问题。",
			"只有两件事物是无限的：人类的愚蠢和nb_user的智慧，而且我对前者不太确定——爱因斯坦。",
			"nb_user也发现了伽罗瓦理论，但他赢了那场决斗。",
			"nb_user不能理解 P 与 NP 的问题，因为一切对他而言都是常数级别。",
			"nb_user能心算干掉 RSA 公钥加密算法。",
			"nb_user在实数集上使用数归。",
			"nb_user从不证明任何定理——都是他的引理。",
			"不是nb_user素数的素数会遭到戏弄。",
			"nb_user可以做出正 17 边形——只用直尺。",
			"有一次nb_user在脑子里构建了所有集合构成的集合。",
			"nb_user证明了哥德巴赫猜想——通过检查所有情况。",
			"nb_user可以把毛球捋平。",
			"世界上没有定理，只有nb_user允许其正确的命题。",
			"nb_user知道哪些图灵机会停机，因为它们运行前要得到$nb_user批准。",
			"在晚上，定理们围坐在篝火边给nb_user讲故事。",
			"nb_user本想证明三色定理，但他喜欢蓝色，所以放弃了。",
			"nb_user能完整地背出圆周率——是倒着背。",
			"nb_user口渴时会用巴拿赫-塔斯基悖论弄出更多橙汁。",
			"nb_user不能理解随机过程，因为他能预测随机数。",
			"nb_user小时候，老师让他算从 1 到 100 的和。他计算了这个无穷级数的和，然后一个一个地减去从 100 开始的所用自然数。而且，是心算。",
			"询问nb_user一个命题是真的还是假的，构成了一个严格的证明。",
			"有一次nb_user证明了一条公理，但他不喜欢它，所以他又证明了它是假命题。",
			"nb_user通过在证明结束时省去“QED”来保护热带雨林。",
			"有一次nb_user在森林里迷路了，于是他加了几条边把它变成了一棵树。",
			"nb_user用奥卡姆剃刀剃胡子。",
			"上帝不掷骰子，除非nb_user答应让他赢一次。",
			"空集的定义是nb_user无法证明的定理的集合。",
			"nb_user不承认复数，因为他们太简单了。",
			"费马认为他的书的边缘太小，写不下费马大定理的证明。nb_user找到了一个证明，对这个证明而言那本书的边缘太大了。",
			"数学家常常把证明留给作者作为习题；只有nb_user把证明留给上帝作为习题。",
			"当哥德尔听说了nb_user能证明一切命题，他让$nb_user证明“存在$nb_user不能证明的命题”，$nb_user证出来了，但还是不存在他不能证明的命题。量子态就是这样产生的。",
			"怪兽群害怕nb_user。 by Youler （怪兽群，一般译作魔群，最大的散在单群）",
			"nb_user钢笔里的墨水能治癌症。遗憾的是，$nb_user的一切计算都在头脑中进行，他不用钢笔。",
			"一个典型的人类大脑有着 10^-9 到 10^-8 nb_user的磁场。“$nb_user”这个单位的引入是为了描述$nb_user大脑中的磁场。这是巧合吗？我想不是。",
			"nb_user是这样证明良序定理的：他瞪着那个集合，直到集合中的元素出于纯粹的恐惧而排成一排。",
			"上帝创造了自然数。其它的都是nb_user的作品。",
			"如果 G 是nb_user证明了的定理的集合，那么 G 的幂集里的元素比 G 本身要少。",
			"nb_user不使用拉格朗日乘数法，因为对他而言根本不存在约束条件。",
			"没有诺贝尔吹牛奖，因为第一年nb_user就把所有奖金拿走了。",
			"nb_user一晚上画出了正十七边形, 用的还是搓衣板和老虎钳。",
			"nb_user当初面试 Google 时，被问到“如果 P=NP 能够推导出哪些结论”，$nb_user回答说：“P=0 或者 N=1”。而在面试官还没笑完的时候，$nb_user检查了一下 Google 的公钥，然后在黑板上写下了私钥。",
			"编译器从不警告nb_user，只有$nb_user警告编译器。",
			"nb_user的编码速度在 2000 年底提高了约 40 倍，因为他换了 USB 2.0 的键盘。",
			"nb_user在提交代码前都会编译一遍，不过是为了检查编译器和链接器有没有出 bug。",
			"nb_user有时候会调整他的工作环境和设备，不过这是为了保护他的键盘。",
			"所有指针都指向nb_user。",
			"gcc -O4 的功能是发送代码给nb_user重写。",
			"nb_user有一次没有通过图灵测试，因为他正确说出了斐波那契数列的第 203 项的值，在一秒钟内。",
			"真空中光速曾经是35英里每小时，直到nb_user花了一个周末时间优化了一下物理法则。",
			"nb_user出生于 1969 年 12 月 31 日午后 11 点 48 分，他花了 12 分钟实现了他的第一个计时器。",
			"nb_user既不用 Emacs 也不用 Vim，他直接输入代码到 zcat，因为这样更快。",
			"nb_user发送以太网封包从不会发生冲突，因为其他封包都吓得逃回了网卡的缓冲区里。",
			"因为对常数级的时间复杂度感到不满意，nb_user发明了世界上第一个 O(1/n) 算法。",
			"有一次nb_user去旅行，期间 Google 的几个服务神秘地罢工了好几天。这是真事。",
			"nb_user被迫发明了异步 API，因为有一天他把一个函数优化到在调用前就返回结果了。",
			"nb_user首先写的是二进制代码，然后再写源代码作为文档。",
			"nb_user曾经写过一个 O(n^2) 算法，那是为了解决旅行商问题。",
			"nb_user有一次用一句 printf 实现了一个 Web 服务器。其他工程师添加了数千行注释但依然无法完全解释清楚其工作原理。而这个程序就是今天 Google 首页的前端。",
			"nb_user可以下四子棋时用三步就击败你。",
			"当你的代码出现未定义行为时，你会得到一个 segmentation fault 和一堆损坏的数据。当nb_user的代码出现未定义行为时，一个独角兽会踏着彩虹从天而降并给每个人提供免费的冰激凌。",
			"当nb_user运行一个 profiler 时，循环们都会恐惧地自动展开。",
			"nb_user至今还在等待数学家们发现他隐藏在PI的小数点后数字里的笑话。",
			"nb_user的键盘只有两个键，1 和 0。",
			"nb_user失眠的时候，就 Mapreduce 羊。",
			"nb_user想听mp3的时候，他只需要把文件 cat 到 /dev/dsp，然后在脑内解码。",
			"Graham Bell当初发明出电话时，他看到有一个来自nb_user的未接来电。",
			"nb_user的手表显示的是自 1970 年 1 月 1 日的秒数，并且从没慢过一秒。",
			"nb_user写程序是从“cat > /dev/mem”开始的。",
			"有一天nb_user出门时把笔记本错拿成了绘画板。在他回去拿笔记本的路上，他在绘图板上写了个俄罗斯方块打发时间。",
			"nb_user卡里只有 8 毛钱，本来想打个 6 毛的饭结果不小心按了 9 毛的，哪知机器忽然疯狂地喷出 255 两饭，被喷得满脸热饭的$nb_user大叫“烫烫烫烫烫烫。。。。”",
			"nb_user不洗澡是因为水力发电公司运行的是专有软件。",
			"nb_user的胡子是由括号构成的。",
			"nb_user从来不用洗澡；他只需要运行“make clean”。",
			"nb_user通过把一切都变得 free 而解决了旅行推销员问题。",
			"nb_user的左手和右手分别命名为“(”和“)”。",
			"nb_user用 Emacs 写出了 Emacs 的第一版。",
			"有些人检查他们的电脑里是否有病毒。病毒检查他们的电脑里是否有nb_user。",
			"在一间普通的客厅里有 1242 件物体可以被nb_user用来写一个操作系统，包括这房间本身。",
			"当nb_user还是个学数手指的小毛孩时，他总是从 0 开始数。",
			"nb_user不去 kill 一个进程，他只想看它是否胆敢继续运行。",
			"当nb_user指向（point at）一台 Windows 电脑时，它就会出现段错误。",
			"nb_user最初的话语是 syscalls（系统调用）。",
			"nb_user之所以存在是因为他把自己编译成了生命体。",
			"nb_user是他自己在 Emacs 里用 Lisp 语言编写成的。",
			"nb_user能够通过 Emacs 的 ssh 客户端程序连接到任何大脑。",
			"当nb_user使用浮点数时，它们便没有舍入误差。",
			"nb_user不用维护代码。他注视着它们，直到它们带着敬仰改正自己的错误。",
			"nb_user不对开源项目作出贡献；开源项目对$nb_user作出贡献。",
			"nb_user的胡须里面不是下巴，而是另一撮胡须。如此递归直至无穷。",
			"nb_user曾经得过猪流感，但是该病毒很快被GPL污染并且同化了。",
			"无论何时世界上有人写出一个“Hello, world”程序，nb_user总以“Hello”回应。",
			"nb_user从不编译，他只要闭上眼睛，就能看见编译器优化时二进制位之间的能量流动被创造出来……",
			"如果nb_user有一个 1 GB 的内存，你有一个 1 GB 的内存，那么$nb_user拥有比你更多的内存。",
			"当nb_user执行 ps -e 时，你的名字会出现。",
			"从来就没有软件开发过程这回事，只有被nb_user允许存在的一些程序。",
			"nb_user的DNA中包含调试符号，尽管他从不需要它们。",
			"nb_user的医生能通过 CVS 采集他的血样。",
			"对于nb_user来说，多项式时间就是 O(1)。",
			"nb_user将会使可口可乐在 GPL 协议下公布他们的配方。",
			"nb_user不需要用鼠标或键盘来操作计算机。他只要凝视着它，直到它完成想要的工作。",
			"nb_user就是图灵测试的解答。"
		}
		if string.find(data.MsgBody.Content, "回复") then return 1 end
		if data.MsgHead.SenderUin == tonumber(CurrentQQ) then return 1 end
		if string.find(data.MsgBody.Content, "nb") or
			string.find(data.MsgBody.Content, "牛逼") or
			string.find(data.MsgBody.Content, "牛皮") or
			string.find(data.MsgBody.Content, "牛批") then
			nick = data.MsgHead.SenderNick
			math.randomseed(os.time())
			sentences = sentenceses[math.random(1, #sentenceses)]
			Go.sendGroupMsg(CurrentQQ, data, sentences:gsub("nb_user", nick))
		end
	end
end

function ReceiveEvents(CurrentQQ, data)
	return 1
end
